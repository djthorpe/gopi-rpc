syntax = "proto3";
package gopi;

import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";

// The service discovery service definition
service Discovery {
  // Simple ping method to show server is "up"
  rpc Ping (google.protobuf.Empty) returns (google.protobuf.Empty);

  // Registers a service record
  rpc Register (ServiceRecord) returns (google.protobuf.Empty);

  // Enumerates Services
  rpc Enumerate (EnumerateRequest) returns (EnumerateReply);

  // Lookup Service Instances
  rpc Lookup (LookupRequest) returns (LookupReply);

  // Stream change events
  rpc StreamEvents (StreamEventsRequest) returns (stream Event); 
}

// DiscoveryType
enum DiscoveryType {
    DISCOVERY_NONE = 0;
    DISCOVERY_DNS = 1;
    DISCOVERY_DB = 2;
}

// Event type
enum EventType {
    EVENT_NONE = 0;
    EVENT_ADD = 1;
    EVENT_CHANGE = 2;
    EVENT_EXPIRE = 3;
    EVENT_REMOVE = 4;
    EVENT_NAME = 5;
}

// An RPCServiceRecord
message ServiceRecord {
    string name = 1;
    string service = 2;
    string subtype = 3;
    uint32 port = 4;
    string host = 5;
    repeated string txt = 6;
    repeated string ip4 = 7;
    repeated string ip6 = 8;
    google.protobuf.Duration ttl = 9;
}

// Filter for lookup request
message LookupRequest {
    DiscoveryType type = 1;
    string service = 2;
}

// Filter for enumerate request
message EnumerateRequest {
    DiscoveryType type = 1;
}

// Return zero or more service records
message LookupReply {
    repeated ServiceRecord service = 2;
}

// Return an enumeration of services
message EnumerateReply {
    repeated string service = 2;
}

// Filter for stream events request
message StreamEventsRequest {
    string service = 1;
}

// Monitor discovery changes
message Event {
    EventType type = 1;
    ServiceRecord service = 2;
}
