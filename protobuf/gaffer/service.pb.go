//
//Go Language Raspberry Pi Interface
//(c) Copyright David Thorpe 2016-2020
//All Rights Reserved
//For Licensing and Usage information, please see LICENSE.md

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: gaffer/service.proto

package gaffer

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// A service definition is used to start one or more processes
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid     uint32   `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`         // Service ID
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`        // Name for the service
	Path    string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`        // Path to the executable
	Cwd     string   `protobuf:"bytes,4,opt,name=cwd,proto3" json:"cwd,omitempty"`          // Working directory
	Args    []string `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`        // Executable arguments
	User    string   `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`        // User identifier
	Group   string   `protobuf:"bytes,7,opt,name=group,proto3" json:"group,omitempty"`      // Group identifier
	Enabled bool     `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"` // Service enablement
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaffer_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_gaffer_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_gaffer_service_proto_rawDescGZIP(), []int{0}
}

func (x *Service) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Service) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *Service) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Service) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Service) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Service) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Return a list of services
type ServiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service []*Service `protobuf:"bytes,1,rep,name=service,proto3" json:"service,omitempty"`
}

func (x *ServiceList) Reset() {
	*x = ServiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaffer_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceList) ProtoMessage() {}

func (x *ServiceList) ProtoReflect() protoreflect.Message {
	mi := &file_gaffer_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceList.ProtoReflect.Descriptor instead.
func (*ServiceList) Descriptor() ([]byte, []int) {
	return file_gaffer_service_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceList) GetService() []*Service {
	if x != nil {
		return x.Service
	}
	return nil
}

// A service identifier
type ServiceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid uint32 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"` // ID of a service
}

func (x *ServiceId) Reset() {
	*x = ServiceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaffer_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceId) ProtoMessage() {}

func (x *ServiceId) ProtoReflect() protoreflect.Message {
	mi := &file_gaffer_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceId.ProtoReflect.Descriptor instead.
func (*ServiceId) Descriptor() ([]byte, []int) {
	return file_gaffer_service_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceId) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

var File_gaffer_service_proto protoreflect.FileDescriptor

var file_gaffer_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x67, 0x61, 0x66, 0x66, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x61, 0x66, 0x66, 0x65, 0x72, 0x22, 0xad,
	0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x38,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x67, 0x61, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x1d, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x73, 0x69, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gaffer_service_proto_rawDescOnce sync.Once
	file_gaffer_service_proto_rawDescData = file_gaffer_service_proto_rawDesc
)

func file_gaffer_service_proto_rawDescGZIP() []byte {
	file_gaffer_service_proto_rawDescOnce.Do(func() {
		file_gaffer_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_gaffer_service_proto_rawDescData)
	})
	return file_gaffer_service_proto_rawDescData
}

var file_gaffer_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gaffer_service_proto_goTypes = []interface{}{
	(*Service)(nil),     // 0: gaffer.Service
	(*ServiceList)(nil), // 1: gaffer.ServiceList
	(*ServiceId)(nil),   // 2: gaffer.ServiceId
}
var file_gaffer_service_proto_depIdxs = []int32{
	0, // 0: gaffer.ServiceList.service:type_name -> gaffer.Service
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gaffer_service_proto_init() }
func file_gaffer_service_proto_init() {
	if File_gaffer_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gaffer_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaffer_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaffer_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gaffer_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gaffer_service_proto_goTypes,
		DependencyIndexes: file_gaffer_service_proto_depIdxs,
		MessageInfos:      file_gaffer_service_proto_msgTypes,
	}.Build()
	File_gaffer_service_proto = out.File
	file_gaffer_service_proto_rawDesc = nil
	file_gaffer_service_proto_goTypes = nil
	file_gaffer_service_proto_depIdxs = nil
}
